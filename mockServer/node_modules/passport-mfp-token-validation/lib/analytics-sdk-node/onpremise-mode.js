
/**
 * @license
 * Licensed Materials - Property of IBM
 * 5725-I43 (C) Copyright IBM Corp. 2006, 2013. All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 */
/*global require, exports*/
// Performs setup for running in premise mode, and returns an environment object
// for tasks specific to the rest api.
//
// Every incoming request is logged to the console.  Most responses are logged
// too.
//
exports.setupOnPremiseMode = function setupOnPremiseMode(emitter, fs, http, url, logger, utils, data) {

    'use strict';

    logger.logEnter('setupOnPremiseMode');

    var config = null,
        CONSTANTS = require('./constants');

    if (!_validConfigurationString(data)) {
        emitter.emit('error', 'Configuration file is not defined.');
        return null;
    }

    try {
        config = JSON.parse(data);
    } catch (e) {
        emitter.emit('error', 'Configuration file can not be parsed');
        return null;
    }

    function analyticsWarOptions(method) {
        url = url.parse(config.url);
        var options = {
            path: url.path,
            method: method,
            hostname: url.hostname,
            port: url.port,
            auth: config.username + ":" + config.password
        };

        logger.log('elasticsearchOptions: ' + JSON.stringify(options));

        return options;
    }

    function loadValidator() {
        var EventReportValidator = require('./EventReportValidator.js');
        return EventReportValidator;
    }

    function _validConfigurationString(data) {
        if (typeof data !== 'string' || data === null || typeof data === 'undefined' || data === 'null') {
            return false;
        }

        return true;
    }

    logger.logExit('setupOnPremiseMode');

    return {
        get: http.get,
        name: CONSTANTS.onpremise,
        loadValidator: loadValidator,
        elasticsearchOptions: analyticsWarOptions,
        request: http.request
    };

};